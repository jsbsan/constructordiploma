' Gambas module file

Public Sub comprobarEntorno()
  
  Dim texto As String
  Dim falta As Boolean = False
  
  If Not comun.instalado("zip") Then 
    texto = ("zip") & "\n"
    falta = True
  Endif
  
  If Not comun.instalado("pdftk") Then 
    texto &= ("pdftk") & "\n"
    falta = True
  Endif
  
  If Not comun.instalado("imagemagick") Then 
    texto &= ("imagemagick") & "\n"
    falta = True
  Endif
  
  If falta = True Then
    Message.Info(("Falta los siguientes programas por instarlar:") & "\n" & texto & ("Instalelos para poder ejecutar el programa correctamente"))
  Endif
  
End

Public Function instalado(paquete As String) As Boolean
  'Indica si un paquete de software está instalado en el sistema o no (Debian y derivados)
  
  Dim contenido As String
  Dim n As Integer
  
  Shell "dpkg -l|grep " & paquete & " > /tmp/paq.txt" Wait 
  Try contenido = File.load("/tmp/paq.txt")
  n = InStr(contenido, " " & paquete & " ")
  
  If n > 0 And Left(contenido, 2) = "ii" Then 'si el paquete se desinstaló pero no completamente la línea empieza por rc
    Return True
  Else 
    Return False
  Endif 
  
End 

Public Function BetweenLista(Datos As String, Cadena1 As String, Cadena2 As String) As String[]
  
  Dim lista As New String[]
  Dim subcadena As String
  Dim iinf As Integer
  Dim isup As Integer
  Dim a As Integer
  
  For a = 0 To Len(datos) - Len(cadena2) - Len(cadena1)
    
    iinf = InStr(Datos, Cadena1, a) + Len(Cadena1)
    isup = InStr(Datos, Cadena2, iinf)
    
    If iinf <= (isup - iinf) Then
      subcadena = Mid(Datos, iinf, isup - iinf)
      lista.add(subcadena)
      a = isup + Len(cadena2)
    Endif
    
  Next
  
  Return lista
  
End

Public Function Between(Datos As String, Cadena1 As String, Cadena2 As String) As String
  
  Dim iinf As Integer
  Dim isup As Integer
  
  iinf = InStr(Datos, Cadena1) + Len(Cadena1)
  isup = InStr(Datos, Cadena2, iinf)
  Return Mid(Datos, iinf, isup - iinf)
  
End
