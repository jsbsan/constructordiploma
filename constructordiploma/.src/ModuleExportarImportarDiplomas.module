' Gambas module file

Public Function exportar(indice As Integer, ruta As String) As Boolean
  
  Dim cambionombre As String
  Dim zip As New ClassZip
  Dim regtmp As New ClassDiplomaTematico
  'borro los datos de la carpeta temporal.
  ModuleUtilidadesDisco.vaciarDirectorio(ModulePrincipal.RutaPrograma & "/trabajotmp/exportar")
  'copio los datos de imagenes y plantilla, a una carpeta temporal de trabajo
  regtmp.NombrePlantilla = ModuleGestionDiploma.lista.Registros[indice].NombrePlantilla
  regtmp.Tema = ModuleGestionDiploma.lista.Registros[indice].Tema
  regtmp.PlantillaBase = ModuleGestionDiploma.lista.Registros[indice].plantillabase
  regtmp.ImagenFondo = ModuleGestionDiploma.lista.Registros[indice].ImagenFondo
  regtmp.ImagenMarco = ModuleGestionDiploma.lista.Registros[indice].ImagenMarco
  regtmp.ImagenLogo = ModuleGestionDiploma.lista.Registros[indice].ImagenLogo
  regtmp.Foto04 = ModuleGestionDiploma.lista.Registros[indice].Foto04
  regtmp.Foto05 = ModuleGestionDiploma.lista.Registros[indice].Foto05
  regtmp.tag = ModuleGestionDiploma.lista.Registros[indice].tag
  
  File.Save(ModulePrincipal.RutaPrograma & "trabajotmp/exportar/diploma.txt", regtmp.Text())
  
  copiar(ModulePrincipal.rutaprograma & "temporales/PlantillasBases", regtmp.PlantillaBase)
  copiar(ModulePrincipal.rutaprograma & "temporales/FotosPlantillasTematica", regtmp.ImagenFondo)
  copiar(ModulePrincipal.rutaprograma & "temporales/FotosPlantillasTematica", regtmp.ImagenMarco)
  copiar(ModulePrincipal.rutaprograma & "temporales/FotosPlantillasTematica", regtmp.ImagenLogo)
  copiar(ModulePrincipal.rutaprograma & "temporales/FotosPlantillasTematica", regtmp.Foto04)
  copiar(ModulePrincipal.rutaprograma & "temporales/FotosPlantillasTematica", regtmp.Foto05)
  ModuleUtilidadesDisco.CopiarFicheros(User.home & "/.fonts", ModulePrincipal.RutaPrograma & "trabajotmp/exportar/", "*.ttf")
  'comprimo
  If Exist(User.home & "/temporal.zip") Then Kill User.home & "/temporal.zip"
  
  zip.comprimirDatos(ModulePrincipal.RutaPrograma & "trabajotmp/exportar")
  'cambio caracteres " " por "_", para validar el nombre
  cambionombre = Replace$(ModuleUtilidadesDisco.extraedesdebarra(ruta), " ", "_")
  
  ruta = Mid$(ruta, 1, Len(ruta) - Len(cambionombre)) & cambionombre
  'el archivo comprimido, le cambio al path que han introducido
  If Exist(ruta) Then 
    'existe, lo borro para actualizarlo
    Try Kill ruta
  Endif
  
  Try Copy User.home & "/temporal.zip" To ruta
  If Error Then 
    Message.Error(("Error al intentar copiar el archivo comprimido temporal al archivo final"))
    Return False
  Endif
  Return True
  
End

Public Function importar(fichero As String) As Boolean
  
  Dim a As Integer
  Dim regdiploma As New ClassDiplomaTematico
  Dim regtmp As New ClassListaDiploma
  Dim rutazip As String
  Dim zip As New ClassZip
  'borro los datos de la carpeta temporal.
  '  ¡ModuleUtilidadesDisco.vaciarDirectorio(ModulePrincipal.RutaPrograma & "trabajotmp/importar")
  Shell "rm -rf " & ModulePrincipal.RutaPrograma & "trabajotmp/importar" Wait
  'creo el subdirectorio vacio
  
  Mkdir ModulePrincipal.RutaPrograma & "trabajotmp/importar"
  'extraigo los ficheros
  
  Shell "cd " & User.Home & "/" & "ConstructorDiplomas" & "/trabajotmp/importar/" & " && unzip " & fichero Wait
  'creo un nuevo objeto tipo ClassDiplomaTematico
  ''TODO: comprobar extraeRutaZip
  If InStr(fichero, "(") <> 0 Or InStr(fichero, ")") <> 0 Then 
    Message.Error(("Nombre no valido de archivo, contiene parentesis en su nombre"))
    Return False
  Endif
  rutazip = ModulePrincipal.RutaPrograma & "trabajotmp/importar/" & zip.extraeRutaZip(fichero, "ConstructorDiplomas")
  
  regtmp.LecturaDatos(Split(File.Load(rutazip & "/ConstructorDiplomas/trabajotmp/exportar/diploma.txt"), "\n"))
  regdiploma = regtmp.Registros[0]
  
  ModuleUtilidadesDisco.CopiarFicheros(rutazip & "/ConstructorDiplomas/trabajotmp/exportar", User.home & "/.fonts", "*.ttf")
  
  'copio la plantilla y los ficheros de fotos,
  'si alguno tiene el nombre igual a los que existen, lo cambio de nombre ->notifico ese cambio 
  'de nombre al objeto classDiploma (regdiploma)
  If regdiploma.foto04 <> "" Then regdiploma.Foto04 = copiarFicheroImagenDiploma(regdiploma.Foto04, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  If regdiploma.foto05 <> "" Then regdiploma.Foto05 = copiarFicheroImagenDiploma(regdiploma.Foto05, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  If regdiploma.ImagenFondo <> "" Then regdiploma.ImagenFondo = copiarFicheroImagenDiploma(regdiploma.ImagenFondo, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  If regdiploma.ImagenLogo <> "" Then regdiploma.ImagenLogo = copiarFicheroImagenDiploma(regdiploma.ImagenLogo, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  If regdiploma.ImagenMarco <> "" Then regdiploma.ImagenMarco = copiarFicheroImagenDiploma(regdiploma.ImagenMarco, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  If regdiploma.plantillabase <> "" Then regdiploma.PlantillaBase = copiarFicheroPlantillabase(regdiploma.Plantillabase, rutazip & "/ConstructorDiplomas/trabajotmp/exportar")
  'compruebo que nombr de la plantilla no sea igual a una existente)
  For a = 0 To ModuleGestionDiploma.lista.Registros.count - 1
    If regdiploma.NombrePlantilla = ModuleGestionDiploma.lista.Registros[a].NombrePlantilla Then 
      regdiploma.NombrePlantilla &= "_importado"
      a = 0
    Endif
  Next
  
  'añado a la lista de diplomas el nuevo objeto
  ModuleGestionDiploma.anadirRegistro(regdiploma)
  
End

Public Function copiar(ruta As String, nombre As String) As Boolean
  
  If nombre <> "" Then 
    Copy ruta & "/" & nombre To ModulePrincipal.RutaPrograma & "/trabajotmp/exportar/" & nombre 
  Endif
  
End

Public Function copiarFicheroImagenDiploma(nombrefichero As String, ruta As String) As String
  
  'copia el fichero importado,comprobando si existe , si existe le cambia el nombre, devolviendo el nombre cambiado
  'para que se actualice el registro de diploma
  Dim nombreInicial As String = nombrefichero
  Dim extension As String
  Dim copiar As String
  Dim comparacion As String
  Dim comando As String
  
  copiar = "si"
  While (Exist(ModulePrincipal.RutaPrograma & "/temporales/FotosPlantillasTematica/" & nombrefichero))
    'si existe fichero con el mismo nombre, 1º comprobar si es igual...
    comando = "cmp " & ruta & "/" & nombreInicial & " " & ModulePrincipal.RutaPrograma & "/temporales/FotosPlantillasTematica/" & nombrefichero
    Shell comando To comparacion
    If comparacion = "" Then 
      'son iguales-> no hace falta cambiar de nombre ya que lo tengo...
      'no hago la copia
      copiar = "no"
      
      Break
    Endif
    
    extension = ModuleUtilidadesDisco.extraeExtension(nombrefichero)
    If extension <> "" Then 
      nombrefichero = Mid$(nombrefichero, 1, Len(nombrefichero) - Len(extension) - 1) & "c" & "." & extension
      '   copiar = "si"
    Else
      nombrefichero = Mid$(nombrefichero, 1, Len(nombrefichero) - Len(extension)) & "c" 
      '  copiar = "si"
    Endif
  Wend
  Print Exist(ruta & "/" & nombreInicial)
  Print Exist(ModulePrincipal.RutaPrograma & "temporales/FotosPlantillaTematica/")
  If copiar = "si" Then Copy ruta & "/" & nombreInicial To ModulePrincipal.RutaPrograma & "temporales/FotosPlantillasTematica/" & nombrefichero
  
  Return nombrefichero
  
End

Public Function copiarFicheroPlantillabase(nombrefichero As String, ruta As String) As String
  
  'copia el fichero importado,comprobando si existe , si existe le cambia el nombre, devolviendo el nombre cambiado
  'para que se actualice el registro de diploma
  Dim nombreInicial As String = nombrefichero
  Dim extension As String
  Dim copiar As String
  Dim comparacion As String
  Dim comando As String
  
  copiar = "si"
  While (Exist(ModulePrincipal.RutaPrograma & "/PlantillasBases/" & nombrefichero))
    
    'si existe fichero con el mismo nombre, 1º comprobar si es igual...
    comando = "cmp " & ruta & "/" & nombreInicial & " " & ModulePrincipal.RutaPrograma & "PlantillasBases/" & nombrefichero
    Shell comando To comparacion
    If comparacion = "" Then 
      'son iguales-> no hace falta cambiar de nombre ya que lo tengo...
      'no hago la copia
      copiar = "no"
      
      Break
    Endif
    
    extension = ModuleUtilidadesDisco.extraeExtension(nombrefichero)
    If extension <> "" Then 
      nombrefichero = Mid$(nombrefichero, 1, Len(nombrefichero) - Len(extension) - 1) & "c" & "." & extension
      '   copiar = "si"
    Else
      nombrefichero = Mid$(nombrefichero, 1, Len(nombrefichero) - Len(extension)) & "c" 
      '  copiar = "si"
    Endif
  Wend
  Print "comprueba plantilla base..."
  Print Exist(ruta & "/" & nombreInicial)
  Print Exist(ModulePrincipal.RutaPrograma & "PlantillasBases/" & nombrefichero)
  If copiar = "si" Then Copy ruta & "/" & nombreInicial To ModulePrincipal.RutaPrograma & "PlantillasBases/" & nombrefichero
  
  Return nombrefichero
  
End
